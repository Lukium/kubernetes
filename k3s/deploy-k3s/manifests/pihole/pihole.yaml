apiVersion: v1
kind: Namespace
metadata:
  name: pihole
---
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: default-headers
  namespace: pihole
spec:
  headers:
    browserXssFilter: true
    contentTypeNosniff: true
    forceSTSHeader: true
    stsIncludeSubdomains: true
    stsPreload: true
    stsSeconds: 15552000
    customFrameOptionsValue: SAMEORIGIN
    customRequestHeaders:
      X-Forwarded-Proto: https
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: pihole
  namespace: pihole
  annotations: 
    kubernetes.io/ingress.class: traefik-external
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`www.pihole.$traefik_domain`)
      kind: Rule
      services:
        - name: pihole
          port: 80
    - match: Host(`pihole.traefik_domain`)
      kind: Rule
      services:
        - name: pihole
          port: 80
      middlewares:
        - name: default-headers
  tls:
    secretName: $traefik_secret
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pihole
  namespace: pihole
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: $pihole_volume_capacity
  storageClassName: longhorn
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: pihole
    app.kubernetes.io/instance: pihole
  name: pihole
  namespace: pihole
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pihole
  template:
    metadata:
      labels:
        app: pihole
    spec:
      nodeSelector:
        worker: "true"
      containers:
      - image: visibilityspots/cloudflared
        imagePullPolicy: IfNotPresent
        name: cloudflared
        ports:
        - containerPort: 53
          name: dns
          protocol: TCP
        - containerPort: 67
          name: dns-udp
          protocol: UDP
        env:
        - name: TUNNEL_METRICS
          value: 127.0.0.1:3000
      - env:
        - name: TZ
          value: "$pihole_timezone"
        - name: WEBPASSWORD
          value: $pihole_webpassword
        - name: FTLCONF_REPLY_ADDR4
          value: pihole
        - name: PIHOLE_DNS_
          value: 127.0.0.1#5054 
        image: pihole/pihole:latest
        imagePullPolicy: IfNotPresent
        name: pihole
        ports:
        - containerPort: 80
          name: pihole-http
          protocol: TCP
        - containerPort: 53
          name: dns
          protocol: TCP
        - containerPort: 53
          name: dns-udp
          protocol: UDP
        - containerPort: 443
          name: pihole-ssl
          protocol: TCP
        - containerPort: 67
          name: client-udp
          protocol: UDP
        volumeMounts:
        - mountPath: /etc/pihole
          name: pihole
        securityContext:
          capabilities:        
            add:
              - NET_ADMIN  
      restartPolicy: Always
      volumes:
        - name: pihole
          persistentVolumeClaim:
            claimName: pihole
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: pihole
  name: pihole
  namespace: pihole
  annotations:
    kube-vip.io/address: "$pihole_ip"
spec:
  ports:
  - name: dns-udp
    port: 53
    protocol: UDP
    targetPort: 53
  - name: client-udp
    port: 67
    protocol: UDP
    targetPort: 67
  - name: pihole-http
    port: 80
    protocol: TCP
    targetPort: 80
  - name: pihole-https
    port: 443
    protocol: TCP
    targetPort: 443
  - name: dns
    port: 53
    protocol: TCP
    targetPort: 53
  selector:
    app: pihole
  externalTrafficPolicy: Local
  loadBalancerIP: $pihole_ip
  type: LoadBalancer  
